<?php
/**
 * Created by PhpStorm.
 * User: vinhs
 * Date: 2019-03-15
 * Time: 08:46
 */

namespace common\models\queries;

use common\components\db\ActiveQuery;
use common\helpers\WeshopHelper;
use yii\helpers\ArrayHelper;

/**
 * Class PackageQuery
 * @package common\models\queries
 */
class PackageQuery extends ActiveQuery
{

    /**
     * @inheritdoc
     */
    public function remove()
    {
        return parent::remove(); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function defaultSelect($columns = []){
        $this->select(array_merge([
            $this->getColumnName('package_code'), $this->getColumnName('tracking_seller'),
            $this->getColumnName('tracking_reference_1'), $this->getColumnName('tracking_reference_2'),
            $this->getColumnName('package_weight'), $this->getColumnName('package_change_weight'),
            $this->getColumnName('package_dimension_l'), $this->getColumnName('package_dimension_w'),
            $this->getColumnName('package_dimension_h'), $this->getColumnName('seller_shipped'),
            $this->getColumnName('stock_in_us'), $this->getColumnName('stock_out_us'),
            $this->getColumnName('stock_in_local'), $this->getColumnName('lost'),
            $this->getColumnName('current_status'), $this->getColumnName('created_at'),
            $this->getColumnName('updated_at'), $this->getColumnName('id'),
        ],$columns));
        return $this;
    }


    public function filterRelation()
    {
        $this->defaultSelect();
        $this->joinWith(['packageItems' => function (PackageItemQuery $q) {
            $q->defaultSelect();
            $q->remove();
            $q->with(['order' => function (OrderQuery $orderQuery) {
                $orderQuery->defaultSelect();
                $orderQuery->remove();
                $orderQuery->with(['products' => function(ProductQuery $pQuery){
                    $pQuery->defaultSelect();
                }
            ]);
            }]);
        }]);
        return $this;
    }

    public function filter($params)
    {
        $this->remove();
        if(($q = ArrayHelper::getValue($params,'q')) !== null && !WeshopHelper::isEmpty($q)){
            $this->andWhere([
                'OR',
                ['LIKE', $this->getColumnName('package_code'), $q],
                ['LIKE', $this->getColumnName('tracking_seller'), $q],
                ['LIKE', $this->getColumnName('tracking_reference_1'), $q],
                ['LIKE', $this->getColumnName('tracking_reference_2'), $q],
                ['LIKE', $this->getColumnName('manifest_code'), $q],
            ]);
        }
        return $this;

    }
}