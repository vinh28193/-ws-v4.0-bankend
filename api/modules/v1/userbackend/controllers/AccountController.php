<?php
/**
 * Created by PhpStorm.
 * User: galat
 * Date: 25/02/2019
 * Time: 10:13
 */

namespace api\modules\v1\userbackend\controllers;


use api\modules\v1\weshop\controllers\BaseAuthorController;
use common\models\db\Customer;
use common\models\Address;
use common\models\db\SystemCountry;
use common\models\db\SystemDistrict;
use common\models\db\SystemStateProvince;

class AccountController extends BaseAuthorController
{
    /** @var Customer $user */
    public  $user;

    public function beforeAction($action)
    {
        $parent = parent::beforeAction($action);
        $this->user = \Yii::$app->user->getIdentity();
        return $parent; // TODO: Change the autogenerated stub
    }

    public function actionAddAddress(){
        try{
            if(!isset($this->request['first_name']) || empty($this->request['first_name'])){
                return $this->response(false,"First Name is invalid!");
            }
            if(!isset($this->request['last_name']) || empty($this->request['last_name'])){
                return $this->response(false,"Last Name is invalid!");
            }
            if(!isset($this->request['email']) || empty($this->request['email'])){
                return $this->response(false,"Email is invalid!");
            }
            if(!isset($this->request['phone']) || empty($this->request['phone'])){
                return $this->response(false,"Your phone is invalid!");
            }
            if(!isset($this->request['address']) || empty($this->request['address'])){
                return $this->response(false,"Your address is invalid!");
            }
            if(!isset($this->request['country_id']) || empty($this->request['country_id']) || !($country = SystemCountry::findOne($this->request['country_id']))){
                return $this->response(false,"Your country is invalid!");
            }

            if(!isset($this->request['province_id']) || empty($this->request['province_id']) || !($province = SystemStateProvince::findOne($this->request['province_id']))){
                return $this->response(false,"Your province is invalid!");
            }
            if(!isset($this->request['district_id']) || empty($this->request['district_id']) || !($district = SystemDistrict::findOne($this->request['district_id']))){
                return $this->response(false,"Your district is invalid!");
            }
            $mess = "Add new address success!";
            $address = new Address();
            $address->setAttributes($this->request);
            $address->country_name = $country->name;
            $address->country_name = $this->request['district_name'];
            $address->province_name = $province->name;
            $address->district_name = $district->name;

            if(isset($this->request['is_default']) && $this->request['is_default']){
                $count = Address::updateAll(['is_default' => 0],['customer_id'=>$this->user->id,'is_default' => 1]);

                $mess .= " And change address default success!";
                $address->is_default = 1;
            }else{
                $address->is_default = 0;
            }

            $address->store_id = $this->user->store_id;
            $address->customer_id = $this->user->id;
            $address->remove = 0;
            $address->save(0);
            return $this->response(true,$mess);
        }catch (\Exception $e){
            $data = [];
            if(!YII_DEBUG){
                $data = [
                    'message' => $e->getMessage(),
                ];
            }else{
                $data = [
                    'code' => $e->getCode(),
                    'message' => $e->getMessage(),
                    'file' => $e->getFile(),
                    'line' => $e->getLine(),
                    'Previous' => $e->getPrevious(),
                    'TraceAsString' => $e->getTraceAsString(),
                ];
            }
            return $this->response(false,"Your request is invalid!",$data);
        }
    }
}